{
  "name": "@bootnodedev/intents-framework-core",
  "description": "Core solidity contracts for the Intent Framework",
  "version": "0.1.0",
  "author": {
    "name": "BootNode"
  },
  "dependencies": {
    "@hyperlane-xyz/core": "^5.4.1",
    "@openzeppelin/contracts": "^4.9.6",
    "@polymerdao/prover-contracts": "^0.0.17",
    "@uniswap/permit2": "github:Uniswap/permit2",
    "dotenv-run-script": "^0.4.1"
  },
  "devDependencies": {
    "@nomicfoundation/hardhat-foundry": "^1.1.3",
    "@nomicfoundation/hardhat-toolbox": "^5.0.0",
    "@nomiclabs/hardhat-ethers": "^2.2.3",
    "@typechain/ethers-v5": "^11.1.2",
    "@typechain/ethers-v6": "^0.5.1",
    "@typechain/hardhat": "^9.1.0",
    "@types/node": "^22.10.7",
    "ethers": "^5.7.2",
    "forge-std": "github:foundry-rs/forge-std#v1.8.1",
    "hardhat": "^2.22.18",
    "prettier": "^3.0.0",
    "solhint": "^3.6.2",
    "ts-generator": "^0.1.1",
    "ts-node": "^10.8.0",
    "tsx": "^4.19.1",
    "typechain": "patch:typechain@npm%3A8.3.2#~/.yarn/patches/typechain-npm-8.3.2-b02e27439e.patch",
    "typescript": "5.3.3"
  },
  "type": "module",
  "exports": {
    ".": "./dist/index.js",
    "./mailbox": "./dist/contracts/Mailbox.js",
    "./buildArtifact.js": "./dist/buildArtifact.js",
    "./buildArtifact.json": "./dist/buildArtifact.json",
    "./contracts": "./contracts"
  },
  "types": "./dist/index.d.ts",
  "files": [
    "/dist",
    "/contracts"
  ],
  "keywords": [],
  "installConfig": {
    "hoistingLimits": "workspaces"
  },
  "scripts": {
    "clean": "yarn hardhat-esm clean && rm -rf ./dist ./cache ./cache_hardhat ./types ./coverage ./out ./forge-cache ./fixtures && forge clean",
    "build": "yarn hardhat-esm compile && tsc && ./exportBuildArtifact.sh",
    "hardhat-esm": "NODE_OPTIONS='--experimental-loader ts-node/esm/transpile-only --no-warnings=ExperimentalWarning' hardhat --config hardhat.config.cts",
    "forge:build": "forge build",
    "lint": "yarn lint:sol && yarn prettier:check",
    "lint:sol": "forge fmt --check && solhint \"{script,src,test}/**/*.sol\"",
    "sol:fmt": "forge fmt",
    "prettier:check": "prettier --check \"**/*.{json,md,yml}\" --ignore-path \".prettierignore\"",
    "prettier:write": "prettier --write \"**/*.{json,md,yml}\" --ignore-path \".prettierignore\"",
    "test": "forge test -vvv",
    "test:coverage": "forge coverage --no-match-coverage \"(test|mock|node_modules|script)\"",
    "test:coverage:report": "forge coverage --no-match-coverage \"(test|mock|node_modules|script)\" --report lcov && genhtml lcov.info --ignore-errors inconsistent,inconsistent --branch-coverage --output-dir coverage",
    "deployHyperlane7683": "forge script script/DeployHyperlane7683.s.sol:DeployHyperlane7683 -f $NETWORK --broadcast --verify --slow -vvv",
    "run:deployHyperlane7683": "dotenv-run-script deployHyperlane7683",
    "deployOptimism7683": "forge script script/DeployOptimism7683.s.sol:DeployOptimism7683 -f $NETWORK --broadcast --verify --slow -vvv",
    "run:deployOptimism7683": "dotenv-run-script deployOptimism7683",
    "deploySimple": "forge script script/DeploySimple.s.sol:DeploySimple -f $NETWORK --broadcast --slow -vvv",
    "run:deploySimple": "dotenv-run-script deploySimple",
    "deployToken": "forge script script/DeployToken.s.sol:DeployToken -f $NETWORK --broadcast --verify --slow -vvv",
    "run:deployToken": "dotenv-run-script deployToken",
    "openOrder": "forge script script/OpenOrder.s.sol:OpenOrder -f $NETWORK --broadcast --verify --slow -vvv",
    "run:openOrder": "dotenv-run-script openOrder",
    "deployBatchOpen": "forge script script/DeployBatchOpen.s.sol:DeployBatchOpen -f $NETWORK --broadcast --verify --slow -vvv",
    "run:deployBatchOpen": "dotenv-run-script deployBatchOpen",
    "openBatchOrder": "forge script script/OpenBatchOrder.s.sol:OpenBatchOrder -f $NETWORK --broadcast --verify --slow -vvv",
    "run:openBatchOrder": "dotenv-run-script openBatchOrder",
    "enrollRouter": "forge script script/EnrollRouter.s.sol:EnrollRouter -f $NETWORK --broadcast --slow -vvv",
    "run:enrollRouter": "dotenv-run-script enrollRouter",
    "upgradeSimple": "forge script script/UpgradeSimple.s.sol:UpgradeSimple -f $NETWORK --broadcast --slow -vvv",
    "run:upgradeSimple": "dotenv-run-script upgradeSimple",
    "refundOrder": "forge script script/RefundOrder.s.sol:RefundOrder -f $NETWORK --broadcast --slow -vvv",
    "run:refundOrder": "dotenv-run-script refundOrder"
  }
}
